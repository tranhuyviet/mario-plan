{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","store/actions/projectActions.js","components/projects/CreateProject.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","DashBoard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","error","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","response","doc","set","createProject","authorId","add","Date","CreateProject","history","push","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c2bf3a13.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../store/actions/authActions\";\n\nconst SignedInLinks = props => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/create\">New Project</NavLink>\n      </li>\n      <li>\n        <a onClick={props.signOut}>Log Out</a>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\n          {props.profile.initials}\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signOut: () => dispatch(signOut())\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SignedInLinks);\n","export const signIn = credentials => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: \"LOGIN_SUCCESS\" });\n      })\n      .catch(error => {\n        dispatch({ type: \"LOGGIN_ERROR\", error });\n      });\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\n      });\n  };\n};\n\nexport const signUp = newUser => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then(response => {\n        return firestore\n          .collection(\"users\")\n          .doc(response.user.uid)\n          .set({\n            firstName: newUser.firstName,\n            lastName: newUser.lastName,\n            initials: newUser.firstName[0] + newUser.lastName[0]\n          });\n      })\n      .then(() => {\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\n      })\n      .catch(error => {\n        dispatch({ type: \"SIGNUP_ERROR\", error });\n      });\n  };\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/signup\">Signup</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/signin\">Login</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\n\nimport { connect } from \"react-redux\";\n\nconst Navbar = props => {\n  const { auth, profile } = props;\n  //console.log(auth);\n  const links = auth.uid ? (\n    <SignedInLinks profile={profile} />\n  ) : (\n    <SignedOutLinks />\n  );\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo left\">\n          MarioPlant\n        </Link>\n        {links}\n      </div>\n    </nav>\n  );\n};\n\nconst mapStateToProps = state => {\n  //console.log(\"cac\", state);\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  };\n};\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst Notifications = props => {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"notifications\">\n            {notifications &&\n              notifications.map(item => {\n                return (\n                  <li key={item.id}>\n                    <span className=\"pink-text\">{item.user} - </span>\n                    <span>{item.content}</span>\n                    <div className=\"grey-text node-date\">\n                      {moment(item.time.toDate()).fromNow()}\n                    </div>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst ProjectSummary = ({ project }) => {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{project.title}</span>\n        <p>\n          Posted by the {project.authorFirstName} {project.authorLastName}\n        </p>\n        <p className=\"grey-text\">\n          {moment(project.createdAt.toDate()).calendar()}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectSummary;\n","import React from \"react\";\n\nimport ProjectSummary from \"./ProjectSummary\";\nimport { Link } from \"react-router-dom\";\n\nconst ProjectList = ({ projects }) => {\n  return (\n    <div className=\"project-list section\">\n      {projects &&\n        projects.map(project => (\n          <Link to={`/projects/${project.id}`} key={project.id}>\n            <ProjectSummary project={project} />\n          </Link>\n        ))}\n    </div>\n  );\n};\n\nexport default ProjectList;\n","import React, { Component } from \"react\";\n\nimport Notifications from \"./Notifications\";\nimport ProjectList from \"../projects/ProjectList\";\n\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\nclass DashBoard extends Component {\n  render() {\n    const { projects, auth, notifications } = this.props;\n    if (!auth.uid) {\n      return <Redirect to=\"/signin\" />;\n    }\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  //console.log(state);\n  return {\n    //projects: state.project.projects\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] },\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] }\n  ])\n)(DashBoard);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\n\nconst ProjectDetails = props => {\n  const { project, auth } = props;\n  if (!auth.uid) {\n    return <Redirect to=\"/signin\" />;\n  }\n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>\n              Posted by {project.authorFirstName} {project.authorLastName}\n            </div>\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  //console.log(state);\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n  return {\n    project: project,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: \"projects\" }])\n)(ProjectDetails);\n","import React, { Component } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../../store/actions/authActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass SignIn extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    //console.log(this.state);\n    this.props.signIn(this.state);\n  };\n\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"red-text center\">\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signIn: creds => dispatch(signIn(creds))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignIn);\n","import React, { Component } from \"react\";\n\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signUp } from \"../../store/actions/authActions\";\n\nclass SignUp extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    //console.log(this.state);\n    this.props.signUp(this.state);\n  };\n\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            <div className=\"red-text center\">\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signUp: newUser => dispatch(signUp(newUser))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignUp);\n","export const createProject = project => {\n  //use nomal:\n  //   return {\n  //     type: \"CREATE_PROJECT\",\n  //     project: project\n  //   };\n\n  //use thunk:\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    //make async call to database\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore\n      .collection(\"projects\")\n      .add({\n        ...project,\n        authorFirstName: profile.firstName,\n        authorLastName: profile.lastName,\n        authorId: authorId,\n        createdAt: new Date()\n      })\n      .then(() => {\n        dispatch({\n          type: \"CREATE_PROJECT\",\n          project: project\n        });\n      })\n      .catch(error => {\n        dispatch({\n          type: \"CREATE_PROJECT_ERROR\",\n          error\n        });\n      });\n  };\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { createProject } from \"../../store/actions/projectActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass CreateProject extends Component {\n  state = {\n    title: \"\",\n    content: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    //console.log(this.state);\n    this.props.createProject(this.state);\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) {\n      return <Redirect to=\"/signin\" />;\n    }\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Project Content</label>\n            <textarea\n              className=\"materialize-textarea\"\n              id=\"content\"\n              onChange={this.handleChange}\n            ></textarea>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createProject: project => dispatch(createProject(project))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateProject);\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport DashBoard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={DashBoard} />\n          <Route path=\"/projects/:id\" component={ProjectDetails} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGGIN_ERROR\":\n      console.log(\"login error\");\n      return {\n        ...state,\n        authError: \"Login failed\"\n      };\n    case \"LOGIN_SUCCESS\":\n      console.log(\"login success\");\n      return {\n        ...state,\n        authError: null\n      };\n    case \"SIGNOUT_SUCCESS\":\n      console.log(\"signout success\");\n      return state;\n    case \"SIGNUP_SUCCESS\":\n      console.log(\"signup success\");\n      return {\n        ...state,\n        authError: null\n      };\n    case \"SIGNUP_ERROR\":\n      console.log(\"signup error\");\n      return {\n        ...state,\n        authError: action.error.message\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const initState = {\n  projects: [\n    { id: \"1\", title: \"help me find peach\", content: \"this is the content\" },\n    { id: \"2\", title: \"collect all the stars\", content: \"this is the content\" },\n    {\n      id: \"3\",\n      title: \"egg hunt with viet tran\",\n      content: \"this is the content\"\n    }\n  ]\n};\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"CREATE_PROJECT\":\n      console.log(\"created project\", action.project);\n      return state;\n    case \"CREATE_PROJECT_ERROR\":\n      console.log(\"create project error\", action.error);\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default projectReducer;\n","import authReducer from \"./authReducer\";\nimport projectReducer from \"./projectReducer\";\n\nimport { combineReducers } from \"redux\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport { firebaseReducer } from \"react-redux-firebase\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCxfjxAONrPqNCGzcerN4yll4BnVnMAk3I\",\n  authDomain: \"mario-plan-8115d.firebaseapp.com\",\n  databaseURL: \"https://mario-plan-8115d.firebaseio.com\",\n  projectId: \"mario-plan-8115d\",\n  storageBucket: \"mario-plan-8115d.appspot.com\",\n  messagingSenderId: \"858079658042\"\n  //   appId: \"1:858079658042:web:992da20f7fae5ed706b503\",\n  //   measurementId: \"G-VKYN9X9D5D\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n//firebase.analytics();\n\n//firebase.firestore().settings({ timestampsInSnapshots: true });\n\nexport default firebase;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport rootReducer from \"./store/reducers/rootReducer\";\n\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {\n      useFirestoreForProfile: true,\n      userProfile: \"users\",\n      attachAuthIsReady: true\n    })\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n  serviceWorker.unregister();\n});\n"],"sourceRoot":""}